{"version":3,"sources":["../../src/pages/download-list/download-list.module.ts","../../src/pages/download-list/download-list.ts"],"names":[],"mappings":"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","file":"19.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DownloadList } from './download-list';\n\n@NgModule({\n  declarations: [\n    DownloadList,\n  ],\n  imports: [\n    IonicPageModule.forChild(DownloadList),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    DownloadList\n  ]\n})\nexport class DownloadListModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/download-list/download-list.module.ts","import { Component } from \"@angular/core\";\nimport { Device } from \"@ionic-native/device\";\nimport {\n  NavParams,\n  ViewController,\n  ToastController,\n  IonicPage,\n  ModalController\n} from \"ionic-angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { File } from \"@ionic-native/file\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { StreamingMediaPlayer } from \"../../providers/streaming-media/streaming-media\";\nimport {PdfService} from '../../providers/pdf/pdf';\n\ndeclare var cordova: any;\n\n@IonicPage()\n@Component({\n  templateUrl: \"download-list.html\",\n  selector: \"download-list\"\n})\nexport class DownloadList {\n  downloads: any;\n  title: string;\n\n  constructor(\n    public navParams: NavParams,\n    public device: Device,\n    public storage: Storage,\n    public viewCtrl: ViewController,\n    public toastCtrl: ToastController,\n    public modalCtrl: ModalController,\n    private file: File,\n    private translate: TranslateService,\n    public streamingMediaPlayer: StreamingMediaPlayer,\n    public pdfService: PdfService\n  ) {\n    if (this.navParams.get(\"title\")) {\n      this.title = this.navParams.get(\"title\");\n    } else {\n      this.translate.get(\"Downloads\").subscribe(text => {\n        this.title = text;\n      });\n    }\n  }\n\n  ionViewWillEnter() {\n    this.getDownloads();\n  }\n\n  ionSelected() {\n    this.getDownloads();\n  }\n\n  // first get existing checked segments\n  getDownloads() {\n    this.storage.get(\"downloads\").then(downloadList => {\n      this.downloads = downloadList;\n    });\n  }\n\n  mediaModal(item) {\n    // check if this is a pdf, handle differently\n    let url = item.url || item.media_url;\n    let fileExt = url.split(\".\").pop();\n\n    if (fileExt === \"pdf\") {\n      this.handlePDF(url);\n    } else {\n      this.streamingMediaPlayer.start(item, this.downloads);\n    }\n  }\n\n  handlePDF(src) {\n\t\tthis.pdfService.openPdf( src )\n\t}\n\n  removeDownload(item) {\n    let path = cordova.file.dataDirectory + \"media/\";\n    let fileName = item.url.replace(/^.*[\\\\\\/]/, \"\");\n\n    this.file.removeFile(path, fileName).then(\n      msg => {\n        this.removeDownloadSuccess(item);\n      },\n      error => {\n        console.warn(error);\n\n        // still remove data if file not found\n        if (error.code == 1) {\n          this.removeDownloadSuccess(item);\n        }\n      }\n    );\n  }\n\n  removeDownloadSuccess(item) {\n    // remove from downloads and delete file\n    for (let i = this.downloads.length - 1; i >= 0; i--) {\n      if (this.downloads[i].url === item.url) {\n        this.downloads.splice(i, 1);\n        break;\n      }\n    }\n\n    this.storage.set(\"downloads\", this.downloads);\n\n    this.translate.get(\"Download Removed\").subscribe(text => {\n      this.presentToast(text);\n    });\n  }\n\n  presentToast(msg) {\n    let toast = this.toastCtrl.create({\n      message: msg,\n      duration: 5000,\n      position: \"bottom\"\n    });\n\n    toast.present();\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/download-list/download-list.ts"],"sourceRoot":""}