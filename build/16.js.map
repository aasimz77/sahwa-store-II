{"version":3,"sources":["../../src/pages/language-settings/language-settings.module.ts","../../src/pages/language-settings/language-settings.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LanguageSettings } from './language-settings';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    LanguageSettings,\n  ],\n  imports: [\n    IonicPageModule.forChild(LanguageSettings),\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n  ],\n  exports: [\n    LanguageSettings\n  ]\n})\nexport class LanguageSettingsModule {}\n\n// required for ng translate, tells it to look in assets folder for trans files\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/language-settings/language-settings.module.ts","import {Component} from '@angular/core';\nimport {ViewController, ToastController, IonicPage, NavParams} from 'ionic-angular';\nimport {Storage} from '@ionic/storage';\nimport {TranslateService} from '@ngx-translate/core';\nimport { LanguageService } from \"../../providers/language/language.service\";\nimport { Language } from '../../models/language.model';\n\n@IonicPage()\n@Component({\n  templateUrl: 'language-settings.html',\n  selector: 'language-settings'\n})\nexport class LanguageSettings {\n\n  languages: any;\n  title: string = '';\n\n  constructor( \n    private navParams: NavParams,\n    public storage: Storage,\n    public viewCtrl: ViewController,\n    public toastCtrl: ToastController,\n    private languageservice: LanguageService,\n    public translate: TranslateService\n    ) {\n      if(this.navParams.get('title')) {\n        this.title = this.navParams.get('title');\n      } else {\n        this.title = 'Language Settings';\n      }\n  }\n\n  ionViewWillEnter() {\n    this.getLanguages()\n  }\n\n  // first get existing checked segments\n  getLanguages() {\n\n    this.languages = null\n  \n    // Get languages, these are sent from WP site through postMessage in main component\n    this.storage.get('available_languages').then( langs => {\n\n      if(langs) {\n        // this.languageservice.setAvailable(langs);\n        // this.languages = langs\n        this.checkCurrent( langs )\n      }\n\n    })\n    \n  }\n\n  checkCurrent( langs ) {\n\n    this.storage.get( 'app_language' ).then( lang => {\n\n      if( lang ) {\n        // we have an existing language, check it and return languages\n        for (var i = langs.length - 1; i >= 0; i--) {\n\n          // if language codes match, save as checked\n          if(langs[i].code === lang.code || langs[i].code === lang) {\n            langs[i].checked = true\n          }\n\n        }\n        \n      }\n\n      this.languages = langs\n      \n    })\n\n  }\n\n  onToggleLanguage( event, language ) {\n    this.toggleLanguage(language);\n  }\n\n  toggleLanguage( new_language ) {\n\n    this.setLanguage(new_language);\n\n    this.translate.get('Language changed').subscribe( text => {\n      this.presentToast(text);\n    });\n\n  }\n\n  setLanguage(new_language) {\n    let language = new Language({\n      code: new_language.code,\n      dir: (new_language.dir && new_language.dir === 'rtl') ? 'rtl' : 'ltr'\n    });\n\n    this.translate.use( language.code )\n    this.storage.set( 'app_language', language )\n    this.languageservice.setCurrentLanguage(language);\n  }\n\n  presentToast(msg) {\n\n    let toast = this.toastCtrl.create({\n      message: msg,\n      duration: 5000,\n      position: 'bottom'\n    });\n\n    toast.present();\n\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/language-settings/language-settings.ts"],"sourceRoot":""}